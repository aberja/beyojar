type Color {
    id: String!
    light: String!
    dark: String!
}

type Note {
    id: ID!
    userId: String!
    title: String
    content: String
    color: Color!
    favorite: Boolean!
    labels: [String]!
}

type Label {
    id: ID!
    userId: String!
    name: String
}

input ColorInput {
    id: String!
    light: String!
    dark: String!
}

input NewNoteInput {
    title: String
    content: String!
    color: ColorInput!
    favorite: Boolean!
    labels: [String]!
}

input UpdateNoteInput {
    id: ID!
    title: String!
    content: String!
    color: ColorInput!
    favorite: Boolean!
    labels: [String]!
}

input NewLabelInput {
    name: String!
}

input UpdateLabelInput {
    id: ID!
    name: String!
}

type Query {
    listNotes: [Note]
    getNoteById(noteId: String!): Note
    listLabels: [Label]
}

type Mutation {
    createNote(newNote: NewNoteInput!): Note
    updateNote(editNote: UpdateNoteInput!): Note
    deleteNote(noteId: String!): String

    createLabel(newLabel: NewLabelInput!): Label
    updateLabel(editLabel: UpdateLabelInput!): Label
    deleteLabel(labelId: String!): String
}
